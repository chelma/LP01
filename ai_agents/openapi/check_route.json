{
    "openapi": "3.0.0",
    "info": {
      "title": "CheckRoute API",
      "description": "This API takes in the name of two EVE Online star systems and returns a route between them - if one exists. If there are any dangerous systems on the route, this will be called out.",
      "version": "1.0.0"
    },
    "paths": {
      "/checkRoute": {
        "post": {
          "summary": "Get route between two EVE Online star systems",
          "description": "Returns a route between the starting and ending star systems, along with any potential warnings regarding dangerous systems.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "startingSystem": {
                      "type": "string",
                      "description": "The name of the starting star system."
                    },
                    "endingSystem": {
                      "type": "string",
                      "description": "The name of the ending star system."
                    }
                  },
                  "required": ["startingSystem", "endingSystem"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Route successfully calculated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "description": "An ordered list of systems representing the route, with details about traffic and kills in each system.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "system_id": {
                          "type": "integer",
                          "description": "The unique ID of the star system."
                        },
                        "system_name": {
                          "type": "string",
                          "description": "The name of the star system."
                        },
                        "kills": {
                          "type": "integer",
                          "description": "The number of player ships destroyed in the system in the last hour."
                        },
                        "jumps": {
                          "type": "integer",
                          "description": "The number of jumps through the system in the last hour."
                        }
                      },
                      "required": ["system_id", "system_name", "kills", "jumps"]
                    },
                    "example": [
                      {
                        "system_id": 30000142,
                        "system_name": "Jita",
                        "kills": 37,
                        "jumps": 2073
                      },
                      {
                        "system_id": 30000140,
                        "system_name": "Maurasi",
                        "kills": 0,
                        "jumps": 515
                      },
                      {
                        "system_id": 30000119,
                        "system_name": "Itamo",
                        "kills": 1,
                        "jumps": 419
                      },
                      {
                        "system_id": 30000120,
                        "system_name": "Mitsolen",
                        "kills": 8,
                        "jumps": 88
                      },
                      {
                        "system_id": 30000122,
                        "system_name": "Mahtista",
                        "kills": 0,
                        "jumps": 16
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input - one or more system names were not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "example": "Error: startingSystem 'Jta' not found."
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  